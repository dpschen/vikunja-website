---
title: "Configuration options"
slug: config-options
---

You can either use a `config.yml` file in the root directory of Vikunja or set almost all config option with environment variables. If you have both, the value set in the config file is used.
Right now it is not possible to configure openid authentication via environment variables.

Variables are nested in the `config.yml`, these nested variables become `VIKUNJA_FIRST_CHILD` when configuring via
environment variables. So setting

```sh
export VIKUNJA_FIRST_CHILD=true
```

is the same as defining it in a `config.yml` like so:

```yaml
first:
    child: true
```

## Formats

Vikunja supports using `toml`, `yaml`, `hcl`, `ini`, `json`, envfile, env variables and Java Properties files.
We recommend yaml or toml, but you're free to use whatever you want.

Vikunja provides a default [`config.yml`](https://dl.vikunja.io/vikunja/unstable/config.yml.sample) file which you can use as a starting point.

## Config file locations

Vikunja will search on various places for a config file:

* Next to the location of the binary
* In the `service.rootpath` location set in a config (remember you can set config arguments via environment variables)
* In `/etc/vikunja`
* In `~/.config/vikunja`

## Default configuration with explanations

The following explains all possible config variables and their defaults.
You can find a full example configuration file in [here](https://code.vikunja.io/api/src/branch/main/config.yml.sample).

If you don't provide a value in your config file, their default will be used.

### Nesting

Most config variables are nested under some "higher-level" key.
For example, the `interface` config variable is a child of the `service` key.

The docs below aim to reflect that leveling, but please also have a look at [the default config](https://code.vikunja.io/api/src/branch/main/config.yml.sample) file
to better grasp how the nesting looks like.

{% configOptions %}
{% /configOptions %}
