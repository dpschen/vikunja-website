---
import Layout from './Layout.astro'
import Prose from '../components/Prose.astro'
import {MarkdownHeading} from 'astro'
import TableOfContentsHeading from '../components/TableOfContentsHeading.astro'

interface Props {
	title: string
	headings: MarkdownHeading[]
}

const {title, headings} = Astro.props

// Taken from https://kld.dev/building-table-of-contents/
function buildToc(headings: MarkdownHeading[]) {
	const toc = []
	const parentHeadings = new Map()
	headings.forEach((h) => {
		const heading = {...h, subheadings: []}
		parentHeadings.set(heading.depth, heading)
		if (heading.depth === 1) {
			toc.push(heading)
		} else {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading)
		}
	})
	return toc
}

const toc = buildToc(headings)
---

<Layout title={title}>
    <div class="mx-auto flex max-w-screen-2xl flex-col lg:flex-row lg:pt-8">
        <aside class="w-full lg:w-1/5">
            <nav>
                Navigation goes here
            </nav>
        </aside>
        <main class="w-full lg:w-3/5 p-4 pt-6 lg:pt-2" id="main-content">
            <Prose>
                <slot/>
            </Prose>
        </main>
        <div class="w-full lg:w-1/5">
            <div class="sticky top-2">
                <div class="font-display font-bold">
                    On this page
                </div>
                <nav class="text-gray-600 pt-2" id="toc">
                    <ul>
						{toc.map((heading) =>
                                <TableOfContentsHeading heading={heading}/>)}
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</Layout>

<script>
	// Adjusted from https://stackoverflow.com/a/73255559

	const anchors = document.querySelectorAll('#main-content h2, #main-content h3, #main-content h4, #main-content h5, #main-content h6')
	window.addEventListener('scroll', function () {
		let scrollTop = document.documentElement.scrollTop || document.body.scrollTop

		// highlight the last scrolled-to: set everything inactive first
		anchors.forEach(anchor => {
			const link = document.querySelector(`nav#toc ul li a[href="#${anchor.id}"]`)
			if (link) link.classList.remove('text-primary')
		})

		// then iterate backwards, on the first match highlight it and break
		for (let i = anchors.length - 1; i >= 0; i--) {
			if (scrollTop > anchors[i].offsetTop - 75) {
				const link = document.querySelector(`nav ul li a[href="#${anchors[i].id}"]`)
				if (link) link.classList.add('text-primary')
				break
			}
		}
	})
</script>